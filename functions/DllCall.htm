<!DOCTYPE html>
<html>
<head>
  <title>Fonction DllCall</title>
  <meta charset="UTF-8">
  <link href="../css/default.css" rel="stylesheet">
  <link href="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.min.css" rel="stylesheet">
  <link href="../css/custom.css" rel="stylesheet">
  <script src="//code.jquery.com/jquery-1.12.0.min.js">
  </script>
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.min.js">
  </script>
  <script src="../js/custom.js">
  </script>
</head>
<body>
  <h1 class="small"><span class="segments"><span lang="en">Function Reference</span><span lang="fr" style="display: none">Référence UDF</span></span></h1>
  <hr style="height:0px">
  <h1>DllCall</h1>
  <p class="funcdesc">Dynamically calls a function in a DLL.<br></p>
  <p class="codeheader">DllCall ( "dll", "return type", "function" [, type1, param1 [, type n, param n]] )<br></p>
  <h2><span class="segments"><span lang="en">Parameters</span><span lang="fr" style="display: none">Paramètres</span></span></h2>
  <table>
    <tbody>
      <tr>
        <td style="width:15%">dll</td>
        <td style="width:85%">The filename of the DLL to use. <span class="segments"><span lang="en">e.g.</span><span lang="fr" style="display: none">Ex.:</span></span> "user32.dll". A handle obtained from DllOpen can also be used (See Remarks).</td>
      </tr>
      <tr>
        <td>return type</td>
        <td><span class="segments"><span lang="en">The return type of the function (see below).</span><span lang="fr" style="display: none">Le type de retour de la fonction.</span></span></td>
      </tr>
      <tr>
        <td>function</td>
        <td>The name, eg. "MessageBox" or the ordinal value, e.g. 62, of the function in the DLL to call.</td>
      </tr>
      <tr>
        <td>type1</td>
        <td><strong><span class="segments"><span lang="en">[optional]</span><span lang="fr" style="display: none">[optionnel]</span></span></strong> The type of the parameter (see remarks).</td>
      </tr>
      <tr>
        <td>param1</td>
        <td><strong><span class="segments"><span lang="en">[optional]</span><span lang="fr" style="display: none">[optionnel]</span></span></strong> The actual parameter (see remarks).</td>
      </tr>
      <tr>
        <td>type n</td>
        <td><strong><span class="segments"><span lang="en">[optional]</span><span lang="fr" style="display: none">[optionnel]</span></span></strong> The type of the nth parameter (see remarks).</td>
      </tr>
      <tr>
        <td>param n</td>
        <td><strong><span class="segments"><span lang="en">[optional]</span><span lang="fr" style="display: none">[optionnel]</span></span></strong> The actual nth parameter (see remarks).</td>
      </tr>
    </tbody>
  </table><br>
  <span class="segments"><span lang="en">Valid Types are:</span><span lang="fr" style="display: none">Les types valides sont:</span></span><br>
  <br>
  <table>
    <tbody>
      <tr>
        <td style="width:15%"><strong>Type</strong></td>
        <td style="width:85%"><span class="segments"><span lang="en"><strong>Details</strong></span><span lang="fr" style="display: none"><strong>Détails</strong></span></span></td>
      </tr>
      <tr>
        <td>NONE</td>
        <td><span class="segments"><span lang="en">no value (only valid for return type - equivalent to void in C)</span><span lang="fr" style="display: none">aucune valeur (valide seulement pour le type de retour - équivalent à void en C)</span></span></td>
      </tr>
      <tr>
        <td>BYTE</td>
        <td><span class="segments"><span lang="en">an unsigned 8 bit integer</span><span lang="fr" style="display: none">un entier 8 bits non signé</span></span></td>
      </tr>
      <tr>
        <td>BOOLEAN</td>
        <td><span class="segments"><span lang="en">an unsigned 8 bit integer</span><span lang="fr" style="display: none">un entier 8 bits non signé</span></span></td>
      </tr>
      <tr>
        <td>SHORT</td>
        <td><span class="segments"><span lang="en">a 16 bit integer</span><span lang="fr" style="display: none">un entier 16 bits</span></span></td>
      </tr>
      <tr>
        <td>USHORT</td>
        <td><span class="segments"><span lang="en">an unsigned 16 bit integer</span><span lang="fr" style="display: none">un entier 16 bits non signé</span></span></td>
      </tr>
      <tr>
        <td>WORD</td>
        <td><span class="segments"><span lang="en">an unsigned 16 bit integer</span><span lang="fr" style="display: none">un entier 16 bits non signé</span></span></td>
      </tr>
      <tr>
        <td>INT</td>
        <td><span class="segments"><span lang="en">a 32 bit integer</span><span lang="fr" style="display: none">un entier 32 bits</span></span></td>
      </tr>
      <tr>
        <td>LONG</td>
        <td><span class="segments"><span lang="en">a 32 bit integer</span><span lang="fr" style="display: none">un entier 32 bits</span></span></td>
      </tr>
      <tr>
        <td>BOOL</td>
        <td><span class="segments"><span lang="en">a 32 bit integer</span><span lang="fr" style="display: none">un entier 32 bits</span></span></td>
      </tr>
      <tr>
        <td>UINT</td>
        <td><span class="segments"><span lang="en">an unsigned 32 bit integer</span><span lang="fr" style="display: none">un entier 32 bits non signé</span></span></td>
      </tr>
      <tr>
        <td>ULONG</td>
        <td><span class="segments"><span lang="en">an unsigned 32 bit integer</span><span lang="fr" style="display: none">un entier 32 bits non signé</span></span></td>
      </tr>
      <tr>
        <td>DWORD</td>
        <td><span class="segments"><span lang="en">an unsigned 32 bit integer</span><span lang="fr" style="display: none">un entier 32 bits non signé</span></span></td>
      </tr>
      <tr>
        <td>INT64</td>
        <td><span class="segments"><span lang="en">a 64 bit integer</span><span lang="fr" style="display: none">un entier 64 bits</span></span></td>
      </tr>
      <tr>
        <td>UINT64</td>
        <td><span class="segments"><span lang="en">an unsigned 64 bit integer</span><span lang="fr" style="display: none">un entier 64 bits non signé</span></span></td>
      </tr>
      <tr>
        <td>PTR</td>
        <td><span class="segments"><span lang="en">a general pointer (void *)</span><span lang="fr" style="display: none">un pointer en général (void *)</span></span></td>
      </tr>
      <tr>
        <td>HWND</td>
        <td><span class="segments"><span lang="en">a window handle (pointer)</span><span lang="fr" style="display: none">un handle de fenêtre (pointeur)</span></span></td>
      </tr>
      <tr>
        <td>HANDLE</td>
        <td><span class="segments"><span lang="en">an handle (pointer)</span><span lang="fr" style="display: none">un handle (pointeur)</span></span></td>
      </tr>
      <tr>
        <td>FLOAT</td>
        <td><span class="segments"><span lang="en">a single precision floating point number</span><span lang="fr" style="display: none">un nombre simple précision en virgule flottante</span></span></td>
      </tr>
      <tr>
        <td>DOUBLE</td>
        <td><span class="segments"><span lang="en">a double precision floating point number</span><span lang="fr" style="display: none">un nombre double précision en virgule flottante</span></span></td>
      </tr>
      <tr>
        <td>INT_PTR, LONG_PTR, LRESULT, LPARAM</td>
        <td><span class="segments"><span lang="en">an integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</span><span lang="fr" style="display: none">un entier assez grand pour contenir un pointeur lors de l'exécution des versions x86 ou x64 de AutoIt.</span></span></td>
      </tr>
      <tr>
        <td>UINT_PTR, ULONG_PTR, DWORD_PTR, WPARAM</td>
        <td><span class="segments"><span lang="en">an unsigned integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</span><span lang="fr" style="display: none">un entier non signé assez grand pour contenir un pointeur lors de l'exécution des versions x86 ou x64 de AutoIt.</span></span></td>
      </tr>
      <tr>
        <td>STR</td>
        <td><span class="segments"><span lang="en">an ANSI string (a minimum of 65536 chars is allocated).</span><span lang="fr" style="display: none">une chaîne ANSI (un minimum de 65536 caractères sont alloués).</span></span></td>
      </tr>
      <tr>
        <td>WSTR</td>
        <td><span class="segments"><span lang="en">a UNICODE wide character string (a minimum of 65536 chars is allocated).</span><span lang="fr" style="display: none">une chaîne de caractères larges UNICODE (un minimum of 65536 caractères sont alloués).</span></span></td>
      </tr>
      <tr>
        <td>STRUCT</td>
        <td><span class="segments"><span lang="en">structure created with DllStructCreate()</span><span lang="fr" style="display: none">structure créée avec DllStructCreate()</span></span></td>
      </tr>
      <tr>
        <td>*</td>
        <td><span class="segments"><span lang="en">Add * to the end of another type to pass it by reference.</span><span lang="fr" style="display: none">Ajouter * à la fin d'un autre type pour le passer en référence.</span></span> <span class="segments"><span lang="en">For example "int*" passes a pointer to an "int" type.</span><span lang="fr" style="display: none">Par exemple "int*" passe un pointeur dans un type "int".</span></span></td>
      </tr>
    </tbody>
  </table><br>
  <br>
  <span class="segments"><span lang="en">Conversions from Windows API types to AutoIt types:</span><span lang="fr" style="display: none">Conversions des types Windows API vers les types AutoIt:</span></span><br>
  <br>
  <table>
    <tbody>
      <tr>
        <td style="width:15%"><strong>WINDOWS API Type</strong></td>
        <td style="width:85%"><span class="segments"><span lang="en"><strong>AutoIt Type</strong></span><span lang="fr" style="display: none"><strong>Type AutoIt</strong></span></span></td>
      </tr>
      <tr>
        <td>LPCSTR/LPSTR</td>
        <td>STR</td>
      </tr>
      <tr>
        <td>LPCWSTR/LPWSTR</td>
        <td>WSTR</td>
      </tr>
      <tr>
        <td>LPVOID</td>
        <td>PTR</td>
      </tr>
      <tr>
        <td>LP<em>xyz</em></td>
        <td><em>xyz</em>*</td>
      </tr>
      <tr>
        <td>HINSTANCE</td>
        <td>HANDLE</td>
      </tr>
      <tr>
        <td>HRESULT</td>
        <td>LONG</td>
      </tr>
      <tr>
        <td>LONGLONG/LARGE_INTEGER</td>
        <td>INT64</td>
      </tr>
      <tr>
        <td>ULONGLONG/ULARGE_INTEGER</td>
        <td>UINT64</td>
      </tr>
      <tr>
        <td>SIZE_T</td>
        <td>ULONG_PTR</td>
      </tr>
    </tbody>
  </table><span class="segments"><span lang="en">To use nested structures inside a structure you must re-define the nested structure.</span><span lang="fr" style="display: none">Pour utiliser une structure imbriquée dans une structure, vous devez redéfinir la structure imbriquée.</span></span> <span class="segments"><span lang="en">For example, a structure containing 2 POINT structures ("long;long") would be declared as "long;long;long;long".</span><span lang="fr" style="display: none">Par exemple, une structure contenant deux structures POINT ("long;long") serait déclaré comme "long;long;long;long".</span></span> <span class="segments"><span lang="en">The first two long values correspond to the first POINT structure and the second two values correspond to the second POINT structure.</span><span lang="fr" style="display: none">Les deux premières valeurs long correspondent à la première structure POINT et la seconde de deux valeurs correspondent à la seconde structure POINT.</span></span><br>
  <br>
  <span class="segments"><span lang="en">For more Windows API types see <a href="http://msdn.microsoft.com/en-us/library/aa383751.aspx">MSDN</a>.</span><span lang="fr" style="display: none">Pour davantage de types de l'API Windows Consultez <a href="http://msdn.microsoft.com/en-us/library/aa383751.aspx">MSDN</a> .</span></span><br>
  <br>
  <h2><span class="segments"><span lang="en">Return Value</span><span lang="fr" style="display: none">Valeur de retour</span></span></h2>
  <table class="noborder">
    <tbody>
      <tr>
        <td class="valign-top" style="width:10%"><span class="segments"><span lang="en">Success:</span><span lang="fr" style="display: none">Succès&nbsp;:</span></span></td>
        <td style="width:90%"><span class="segments"><span lang="en">an array.</span><span lang="fr" style="display: none">Retourne un tableau.</span></span> <span class="segments"><span lang="en">See remarks.</span><span lang="fr" style="display: none">Voir remarques.</span></span></td>
      </tr>
      <tr>
        <td class="valign-top"><span class="segments"><span lang="en">Failure:</span><span lang="fr" style="display: none">Échec&nbsp;:</span></span></td>
        <td><span class="segments"><span lang="en">sets the @error flag to non-zero.</span><span lang="fr" style="display: none">met @error &lt;&gt; 0.</span></span></td>
      </tr>
      <tr>
        <td class="valign-top"><span class="segments"><span lang="en">@error:</span><span lang="fr" style="display: none">@error&nbsp;:</span></span></td>
        <td>1 = unable to use the DLL file,<br>
        <span class="segments"><span lang="en">2 = unknown "return type",</span><span lang="fr" style="display: none">2 = type de retour inconnu,</span></span><br>
        3 = "function" not found in the DLL file,<br>
        <span class="segments"><span lang="en">4 = bad number of parameters,</span><span lang="fr" style="display: none">4 = erreur sur le nombre de paramètres,</span></span><br>
        5 = bad parameter.</td>
      </tr>
    </tbody>
  </table><br>
  <h2><span class="segments"><span lang="en">Remarks</span><span lang="fr" style="display: none">Remarques</span></span></h2>
  <p>If a dll filename is given then the DLL is automatically loaded and then closed at the end of the call. If you want to manually control the loading and unloading of the DLL then you should use <a href="DllOpen.htm">DllOpen()</a> and <a href="DllClose.htm">DllClose()</a> and use a handle instead of a filename in this function.<br>
  <br>
  <span class="segments"><span lang="en">By default, AutoIt uses the 'stdcall' calling method.</span><span lang="fr" style="display: none">Par défaut, AutoIt utilise la méthode d'appel 'stdcall'.</span></span> <span class="segments"><span lang="en">To use the 'cdecl' method place ':cdecl' after the return type.</span><span lang="fr" style="display: none">Pour utiliser la méthode 'cdecl' placer ':cdecl' après le type de retour.</span></span><br>
  <a href="DllCall.htm">DllCall</a>("SQLite.dll", "int:cdecl", "sqlite3_open", "str", $sDatabase_Filename , "long*", 0).<br>
  <br>
  By default, AutoIt tries to use the ANSI version of a function name, i.e. MessageBoxA is attempted when MessageBox is given as the function name. To call the unicode version use MessageBoxW.<br>
  <br>
  If the function call fails then @error is set to non-zero.<br>
  <span class="segments"><span lang="en">Otherwise an array is returned that contains the function return value and a copy of all the parameters (including parameters that the function may have modified when passed by reference).</span><span lang="fr" style="display: none">Sinon un tableau est retourné qui contient la valeur de retour de la fonction et une copie de tous les paramètres (y compris les paramètres que la fonction a modifiés lors d'un passage par référence).</span></span><br>
  <span class="segments"><span lang="en">$return[0] = function return value</span><span lang="fr" style="display: none">$return[0] = valeur de retour de la fonction</span></span><br>
  $return[1] = param1<br>
  $return[2] = param2<br>
  ...<br>
  $return[n] = paramn<br></p>
  <h2><span class="segments"><span lang="en">Related</span><span lang="fr" style="display: none">Liens</span></span></h2>
  <p><a href="DllCallbackFree.htm">DllCallbackFree</a>, <a href="DllCallbackGetPtr.htm">DllCallbackGetPtr</a>, <a href="DllCallbackRegister.htm">DllCallbackRegister</a>, <a href="DllClose.htm">DllClose</a>, <a href="DllOpen.htm">DllOpen</a>, <a href="DllStructCreate.htm">DllStructCreate</a>, <a href="DllStructGetPtr.htm">DllStructGetPtr</a></p>
  <h2 class="bottom"><span class="segments"><span lang="en">Example</span><span lang="fr" style="display: none">Exemple</span></span></h2>
  <script type="text/javascript">
  function copyToClipboard(section) {
    if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) { // IE (4+) only
      if (window.clipboardData && clipboardData.setData) {
        clipboardData.setData("text", section + "\r\n");
        alert("Copied to clipboard");
      }
    }
  }
  </script>
  <h3><span class="segments"><span lang="en">Example 1</span><span lang="fr" style="display: none">Exemple 1</span></span></h3>
  <div class="codeSnippetContainer">
    <div class="codeSnippetContainerTabs">
      <script type="text/javascript">
      if (document.URL.match(/^mk:@MSITStore:/i)) {
      document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
      document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Ouvrir ce script"><param name="Item1" value=",Examples\\HelpFile\\DllCall.au3,"><\/object>');
      document.write('<\/div>');
      }
      </script>
    </div>
    <div class="codeSnippetContainerCodeContainer">
      <div class="codeSnippetToolBar">
        <div class="codeSnippetToolBarText">
          <script type="text/javascript">
          if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
          document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">Copy to clipboard<\/a>');
          </script>
        </div>
      </div>
      <div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
        <pre><span><span class="S1">; Calling the MessageBox API directly.</span>
<a class="codeSnippetLink" href="../functions/DllCall.htm"><span class="S4">DllCall</span></a><span class="S8">(</span><span class="S7">"user32.dll"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"MessageBox"</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">        </span><span class="S7">"hwnd"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span><span class="S0"> </span><span class="S1">; Handle to the parent window</span>
<span class="S0">        </span><span class="S7">"str"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Some text"</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span><span class="S0"> </span><span class="S1">; The text of the message box</span>
<span class="S0">        </span><span class="S7">"str"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Some title"</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span><span class="S0"> </span><span class="S1">; The title of the message box</span>
<span class="S0">        </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Flags for the message box.</span>
</span>
</pre>
      </div>
    </div>
  </div>
  <h3><span class="segments"><span lang="en">Example 2</span><span lang="fr" style="display: none">Exemple 2</span></span></h3>
  <div class="codeSnippetContainer">
    <div class="codeSnippetContainerTabs">
      <script type="text/javascript">
      if (document.URL.match(/^mk:@MSITStore:/i)) {
      document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
      document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Ouvrir ce script"><param name="Item1" value=",Examples\\HelpFile\\DllCall[2].au3,"><\/object>');
      document.write('<\/div>');
      }
      </script>
    </div>
    <div class="codeSnippetContainerCodeContainer">
      <div class="codeSnippetToolBar">
        <div class="codeSnippetToolBarText">
          <script type="text/javascript">
          if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
          document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext2\').innerText)">Copy to clipboard<\/a>');
          </script>
        </div>
      </div>
      <div class="codeSnippetContainerCode" dir="ltr" id="copytext2">
        <pre><span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S1">; Calling a function that modifies parameters,</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$iPID</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/Run.htm"><span class="S4">Run</span></a><span class="S8">(</span><span class="S7">"notepad"</span><span class="S8">)</span>

<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hWnd</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/WinWait.htm"><span class="S4">WinWait</span></a><span class="S8">(</span><span class="S7">"[CLASS:Notepad]"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2000</span><span class="S8">)</span>

<a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><span class="S9">$hWnd</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">    </span><span class="S1">; Timeout occured.</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Exit.htm"><span class="S5">Exit</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Default.htm"><span class="S5">Default</span></a><span class="S8">,</span><span class="S0"> </span><span class="S7">"Unable to start notepad!"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>

<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aResult</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllCall.htm"><span class="S4">DllCall</span></a><span class="S8">(</span><span class="S7">"user32.dll"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"GetWindowText"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"hwnd"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$hWnd</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"str"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">32768</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Default.htm"><span class="S5">Default</span></a><span class="S8">,</span><span class="S0"> </span><span class="S7">"Number of characters returned: "</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$aResult</span><span class="S8">[</span><span class="S3">0</span><span class="S8">])</span>
<a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Default.htm"><span class="S5">Default</span></a><span class="S8">,</span><span class="S0"> </span><span class="S7">"Text (returned in parameter 2): '"</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$aResult</span><span class="S8">[</span><span class="S3">2</span><span class="S8">]</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S7">"'"</span><span class="S8">)</span>

<a class="codeSnippetLink" href="../functions/WinClose.htm"><span class="S4">WinClose</span></a><span class="S8">(</span><span class="S9">$hWnd</span><span class="S8">)</span>
</span>
</pre>
      </div>
    </div>
  </div>
  <h3><span class="segments"><span lang="en">Example 3</span><span lang="fr" style="display: none">Exemple 3</span></span></h3>
  <div class="codeSnippetContainer">
    <div class="codeSnippetContainerTabs">
      <script type="text/javascript">
      if (document.URL.match(/^mk:@MSITStore:/i)) {
      document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
      document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Ouvrir ce script"><param name="Item1" value=",Examples\\HelpFile\\DllCall[3].au3,"><\/object>');
      document.write('<\/div>');
      }
      </script>
    </div>
    <div class="codeSnippetContainerCodeContainer">
      <div class="codeSnippetToolBar">
        <div class="codeSnippetToolBarText">
          <script type="text/javascript">
          if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
          document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext3\').innerText)">Copy to clipboard<\/a>');
          </script>
        </div>
      </div>
      <div class="codeSnippetContainerCode" dir="ltr" id="copytext3">
        <pre><span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S1">; Show the Windows PickIconDlg.</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$sFileName</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@SystemDir"><span class="S6">@SystemDir</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S7">'\shell32.dll'</span>

<span class="S1">; Create a structure to store the icon index</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$tIconIndex</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructCreate.htm"><span class="S4">DllStructCreate</span></a><span class="S8">(</span><span class="S7">"int"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$tString</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructCreate.htm"><span class="S4">DllStructCreate</span></a><span class="S8">(</span><span class="S7">"wchar[260]"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$iStructsize</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetSize.htm"><span class="S4">DllStructGetSize</span></a><span class="S8">(</span><span class="S9">$tString</span><span class="S8">)</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">/</span></a><span class="S0"> </span><span class="S3">2</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$tString</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sFileName</span><span class="S8">)</span>

<span class="S1">; Run the PickIconDlg - '62' is the ordinal value for this function</span>
<a class="codeSnippetLink" href="../functions/DllCall.htm"><span class="S4">DllCall</span></a><span class="S8">(</span><span class="S7">"shell32.dll"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"none"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">62</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">        </span><span class="S7">"hwnd"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">        </span><span class="S7">"struct*"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$tString</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">        </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$iStructsize</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">        </span><span class="S7">"struct*"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$tIconIndex</span><span class="S8">)</span>

<span class="S9">$sFileName</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$tString</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$iIconIndex</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$tIconIndex</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span>

<span class="S1">; Show the new filename and icon index</span>
<a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Info"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Last selected file: "</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$sFileName</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S7">"Icon-Index: "</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$iIconIndex</span><span class="S8">)</span>
</span>
</pre>
      </div>
    </div>
  </div>
</body>
</html>
